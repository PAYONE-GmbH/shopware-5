<?xml version="1.0" encoding="UTf-8"?>

<project name="Shopware 5 Payone Payments Plugin" default="build">
	<property name="code.dir" location="${basedir}/../"/>
	<property name="log.dir" location="${basedir}/logs"/>
	<property file="${basedir}/build.properties"/>
    
    
   <target name="build"
       depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpcb"/>

    <target name="build-parallel"
        depends="prepare,lint,tools-parallel,phpcb"/>

    <target name="tools-parallel" description="Run tools in parallel">
       <parallel threadCount="2">
           <sequential>
               <antcall target="pdepend"/>
               <antcall target="phpmd-ci"/>
           </sequential>
           <antcall target="phpcpd"/>
           <antcall target="phpcs-ci"/>
           <antcall target="phploc"/>
       </parallel>
    </target>
   
   <target name="clean" description="Cleanup build artifacts">
      <delete dir="${log.dir}/api"/>
      <delete dir="${log.dir}/code-browser"/>
      <delete dir="${log.dir}/pdepend"/>
      <delete dir="${log.dir}"/>

   </target>
   
   <target name="prepare" depends="clean" description="Prepare for build">
	   <mkdir dir="${log.dir}"/>
       <mkdir dir="${log.dir}/api"/>
       <mkdir dir="${log.dir}/code-browser"/>
       <mkdir dir="${log.dir}/pdepend"/>
   </target>

    
   <target name="lint" description="Perform syntax check of sourcecode files">
       <exec executable="bash" failonerror="true">         
           <arg value="-c"/>
           <arg value="find -L ${code.dir} -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l"/>
       </exec>
   </target>

   <target name="phploc" description="Measure project size using PHPLOC">
       <exec executable="phploc" failonerror="false" output="${log.dir}/phploc.txt" error="${log.dir}/error.log" append="true">
		   <arg value="--log-xml"/>
           <arg value="${log.dir}/phploc.xml"/>
           <arg value="--log-csv"/>
           <arg value="${log.dir}/phploc.csv"/>
           <arg value="--count-tests"/>
           <arg path="${code.dir}"/>
       </exec>
   </target>
   
   
    <target name="phpcs"
            description="Find coding standard violations with CodeSniffer. Use on command line before committing.">
        <exec executable="phpcs" failonerror="false">
            <arg value="--standard=${basedir}"/>
            <arg value="--extensions=php"/>
            <arg path="${code.dir}"/>
        </exec>
    </target>

   <target name="phpcs-ci"
           description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
       <exec executable="phpcs" output="/dev/null" failonerror="false">
           <arg value="--report=checkstyle"/>
           <arg value="--report-file=${log.dir}/checkstyle.xml"/>
           <arg value="--standard=${basedir}"/>
           <arg value="--extensions=php"/>
           <arg path="${code.dir}" />
       </exec>
   </target>

   <target name="pdepend" description="Calculate software metrics using PHP_Depend">
       <exec executable="pdepend" failonerror="false" output="${log.dir}/pdepend/output.txt" error="${log.dir}/error.log" append="true" dir="${code.dir}">
           <arg value="--jdepend-xml=${log.dir}/pdepend/jdepend.xml"/>
           <arg value="--summary-xml=${log.dir}/pdepend/summary.xml"/>
           <arg value="--jdepend-chart=${log.dir}/pdepend/jdepend.svg"/>
           <arg value="--overview-pyramid=${log.dir}/pdepend/pyramid.svg"/>
           <arg path="${code.dir}"/>
       </exec>
   </target>

    <target name="phpmd"
            description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd" failonerror="false" error="${log.dir}/error.log" append="true">
            <arg path="${code.dir}"/>
            <arg value="text"/>
            <arg value="codesize,design,unusedcode"/>
        </exec>
    </target>
   
   <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
       <exec executable="phpmd" failonerror="false" error="${log.dir}/error.log" append="true">
           <arg path="${code.dir}"/>
           <arg value="xml"/>
           <arg value="codesize,design,unusedcode"/>
           <arg value="--reportfile"/>
           <arg value="${log.dir}/pmd.xml" />
       </exec>
   </target>

   <target name="phpcpd" description="Find duplicate code using PHP Copy/Paste Detector">
       <exec executable="phpcpd" failonerror="false" output="/dev/null" error="${log.dir}/error.log" append="true">
           <arg value="--log-pmd" />
           <arg value="${log.dir}/pmd-cpd.xml" />
           <arg path="${code.dir}" />
       </exec>
   </target>

   <target name="phpdoc" description="Generate API documentation using phpDocumentor 2">
       <exec dir="${code.dir}" executable="phpdoc" failonerror="false" output="/dev/null" error="${log.dir}/error.log" append="true">
           <arg line="--title='Shopware 5 PAYONE Payment Plugin' -d . -t build/logs/api  " />
       </exec>
   </target>
    
   <target name="phpcb" description="Aggregate tool output with PHP CodeBrowser">
       <exec executable="phpcb" failonerror="false" output="/dev/null" error="${log.dir}/error.log" append="true">
           <arg value="--log" />
           <arg path="${log.dir}" />
           <arg value="--source" />
           <arg path="${code.dir}" />
           <arg value="--output" />
           <arg path="${log.dir}/code-browser" />
       </exec>
   </target>
</project>
